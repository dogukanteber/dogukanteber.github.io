<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Doğukan&#39;s Blog</title>
    <link>https://dogukanteber.github.io/</link>
    <description>Recent content on Doğukan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright notice</copyright>
    <lastBuildDate>Thu, 24 Nov 2022 16:31:08 +0300</lastBuildDate><atom:link href="https://dogukanteber.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Genetic Algorithm</title>
      <link>https://dogukanteber.github.io/posts/genetic-algorithm/</link>
      <pubDate>Thu, 24 Nov 2022 16:31:08 +0300</pubDate>
      
      <guid>https://dogukanteber.github.io/posts/genetic-algorithm/</guid>
      <description>What is the Genetic Algorithm? The genetic algorithm is a search heuristic that is used to find optimal or near-optimal solutions to problems that can be represented as a set of discrete values. This heuristic is often used in optimization and machine learning problems. The genetic algorithm works by creating a population of potential solutions and then iteratively improving the population by applying a set of operators, such as selection, crossover, and mutation.</description>
    </item>
    
    <item>
      <title>Univariate Linear Regression Implementation Using Gradient Descent Algorithm</title>
      <link>https://dogukanteber.github.io/posts/univariate_linear_regression/</link>
      <pubDate>Sun, 09 Oct 2022 20:24:50 +0300</pubDate>
      
      <guid>https://dogukanteber.github.io/posts/univariate_linear_regression/</guid>
      <description>Linear regression is one of the basic and powerful algorithms in machine learning. In this post, I will try to explain how to implement linear regression using a gradient descent algorithm.
Before jumping right into the code, let me briefly talk about what linear regression is. Linear regression is one of the supervised learning algorithms. It performs a regression task and models a target prediction value based on independent variables. The independent variables are also called features.</description>
    </item>
    
    <item>
      <title>Parallel Programming in OpenFOAM</title>
      <link>https://dogukanteber.github.io/posts/parallel-openfoam/</link>
      <pubDate>Mon, 19 Sep 2022 16:46:13 +0300</pubDate>
      
      <guid>https://dogukanteber.github.io/posts/parallel-openfoam/</guid>
      <description>OpenFOAM is a widely used CFD toolbox in academia and industry. It is also used to solve HPC problems related to fluid dynamics. However, some problems can take too much time to execute. For computation-heavy problems, parallel programming can dramatically reduce the computation time.
OpenFOAM has native support for parallel programming with MPI but writing parallel programs in OpenFOAM is not the same as writing parallel programs with MPI.
It was difficult for me to learn parallel programming in OpenFOAM at the beginning of the SoHPC.</description>
    </item>
    
    <item>
      <title>Can You Briefly Explain The Domain Decomposition Method?</title>
      <link>https://dogukanteber.github.io/posts/domain-decomposition/</link>
      <pubDate>Thu, 08 Sep 2022 14:04:52 +0300</pubDate>
      
      <guid>https://dogukanteber.github.io/posts/domain-decomposition/</guid>
      <description>The 3D domain decomposition of original computation domain  Before the Summer of HPC started, my mentor contacted us and gave us an exercise to familiarize ourselves with the MPI library and parallel programming. The exercise required us to use the domain decomposition method and at that time, I had no idea what it is. I searched the Web to learn more about it and eventually solved the exercise but it was difficult topic to learn, especially for beginners who have not experienced parallel programming before.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://dogukanteber.github.io/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dogukanteber.github.io/projects/</guid>
      <description>auth-gateway (In Progress) auth-gateway is an experimental authentication gateway for Cortex. It provides simple configuration to enable users to use multi-tenancy features of Cortex.
parallelDecompose parallelDecompose is a pre-processing utility for OpenFOAM that decomposes a mesh and fields of a case for parallel execution faster than decomposePar
targus targus is a tool that solves the target coverage problem in Wireless Sensor Networks (WSNs). It provides an easy-to-use interface that lets you create your own problem instance, solve it, and give statistical information.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://dogukanteber.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dogukanteber.github.io/about/</guid>
      <description>I am a fourth-year software engineering student at Yasar University. I have experience in different fields of software engineering such as game programming, back-end development, and security. I am proficient in C, Python, Java and Bash programming languages. Other languages that I am familiar with are C++, Go, and Javascript. I am interested in supercomputing and artificial intelligence. I am doing my bachelor thesis on target coverage problem in WSNs. I am trying to solve the target coverage problem by implementing Genetic Algorithm in serial and parallel.</description>
    </item>
    
    <item>
      <title>Open-Source Contributions</title>
      <link>https://dogukanteber.github.io/open_source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dogukanteber.github.io/open_source/</guid>
      <description>In Progress cortexproject/cortex: Documenting runtime config
cortexproject/cortex: Fixing a validation error
cortexproject/cortex: Adding a proposal of auth-gateway to Cortex
jubalh/nudoku: Adding support to allow pausing
Completed ✓ cortexproject/cortex: Added unit test
✓ vitessio/website: Fixed broken links in the documentation
✓ hydrology: Rewrote the serial utility decomposePar in parallel, parallelDecompose. Full source-code
✓ conda/conda: Fixed empty environment.yml
✓ redis/redis-py: Added support for PEXPIREAT&amp;rsquo;s options
✓ redis/redis-py: Added support for PEXPIRE command&amp;rsquo;s options</description>
    </item>
    
  </channel>
</rss>
